package org.jboss.qa.examples.bpm_taxi;

import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElementWrapper;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

/**
 * This class was automatically generated by the data modeler tool.
 */
@XmlRootElement(name = "customer")
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(propOrder = {
        "name",
        "surname",
        "history"
})
public class Customer extends Entity implements java.io.Serializable {

    static final long serialVersionUID = 1L;

    private java.lang.String name;
    private java.lang.String surname;

    @XmlElementWrapper
    private java.util.List<org.jboss.qa.examples.bpm_taxi.Drive> history;

    public Customer() {
    }

    public Customer(final String name, final String surname) {
        this.name = name;
        this.surname = surname;
    }

    public Customer(final String name, final String surname, final List<Drive> history) {
        this.name = name;
        this.surname = surname;
        this.history = history;
    }

    public java.lang.String getName() {
        return this.name;
    }

    public void setName(java.lang.String name) {
        this.name = name;
    }

    public java.lang.String getSurname() {
        return this.surname;
    }

    public void setSurname(java.lang.String surname) {
        this.surname = surname;
    }

    public java.util.List<org.jboss.qa.examples.bpm_taxi.Drive> getHistory() {
        return this.history;
    }

    public void setHistory(
            java.util.List<org.jboss.qa.examples.bpm_taxi.Drive> history) {
        this.history = history;
    }

    @Override
    public boolean equals(final Object o) {
        if (this == o) return true;
        if (!(o instanceof Customer)) return false;

        Customer customer = (Customer) o;

        if (name != null ? !name.equals(customer.name) : customer.name != null) return false;
        return !(surname != null ? !surname.equals(customer.surname) : customer.surname != null);

    }

    @Override
    public int hashCode() {
        int result = name != null ? name.hashCode() : 0;
        result = 31 * result + (surname != null ? surname.hashCode() : 0);
        return result;
    }
}